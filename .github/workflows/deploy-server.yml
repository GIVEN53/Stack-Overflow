name: Java CI with Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  S3_SERVER_BUCKET_NAME: padakmon-server-bucket
  CODE_DEPLOY_APPLICATION_NAME: codedeploy-padakmon
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: codedeploy-padakmon-group
  spring.datasource.url: ${{ secrets.RDS_ENDPOINT }}
  spring.datasource.username: ${{ secrets.RDS_ADMIN }}
  spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
  config.domain: ${{ secrets.S3_ENDPOINT }}
  wt.secret-key: ${{ secrets.JWT_SECRET_KEY }}
  jwt.access-token-expiration-minutes: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_MINUTES }}
  jwt.refresh-token-expiration-minutes: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION_MINUTES }}
  
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./server
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ${{ env.working-directory }}

    - name: Build with Gradle
      run: ./gradlew clean build
      working-directory: ${{ env.working-directory }}
      
      # AWS 인증
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
      # 빌드 결과물 S3 Server Bucket에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --s3-location s3://$S3_SERVER_BUCKET_NAME/$GITHUB_SHA.zip \
          --ignore-hidden-files \
          --source .
    
      # S3 Server Bucket에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_SERVER_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
